 Q.
 There is one meeting room in a firm. There are N meetings in the form of (S[i], F[i]) where S[i] is the start time of meeting i and F[i] is finish time of meeting i. The task is to find the maximum number of meetings that can be accommodated in the meeting room. Print all meeting numbers 
Input:
Input: s[] = {1, 3, 0, 5, 8, 5}, f[] = {2, 4, 6, 7, 9, 9}
Output: 
1 2 4 5
First meeting [1, 2]
Second meeting [3, 4]
Fourth meeting [5, 7]
Fivth meeting [8, 9]
Input:
Input: s[]={75250, 50074, 43659, 8931, 11273, 27545, 50879, 77924},
f[] = {112960, 114515, 81825, 93424, 54316, 35533, 73383, 160252 }
Output:  6 7 1
1 2 4 5


#PYTHON 3

s=list(map(int,input().split())) 
f=list(map(int,input().split())) 
start=0 
end=0 
if(len(s)==len(f)): 
    for i in range(0,len(s)): 
        if(s[i] > start and f[i]>end): 
            print(s[i],f[i]) 
            start=s[i] 
            end=f[i]

 
INPUT:
1 3 0 5 8 5
2 4 6 7 9 9

OUTPUT: 
1 2
3 4
5 7
8 9

